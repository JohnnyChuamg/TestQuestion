<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width">
    <title> Collapsable example </title>
    <link rel="stylesheet" href="/resource/css/Treant.css">
    <script src="/resource/js/vendor/raphael.js"></script>
    <script src="/resource/js/Treant.js"></script>
    <script src="/resource/js/vendor/jquery.min.js"></script>
    <script src="/resource/js/vendor/jquery.easing.js"></script>
    <style type="text/css">
        body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,p,blockquote,th,td { margin:0; padding:0; }
        table { border-collapse:collapse; border-spacing:0; }
        fieldset,img { border:0; }
        address,caption,cite,code,dfn,em,strong,th,var { font-style:normal; font-weight:normal; }
        caption,th { text-align:left; }
        h1,h2,h3,h4,h5,h6 { font-size:100%; font-weight:normal; }
        q:before,q:after { content:''; }
        abbr,acronym { border:0; }

        body { background: #fff; }
        /* optional Container STYLES */
        .chart { height: 600px; margin: 5px; width: 900px; }
        .Treant > .node { padding: 3px; border: 1px solid #484848; border-radius: 3px; }
        .Treant > .node img { width: 100%; height: 100%; }

        .Treant .collapse-switch { width: 100%; height: 100%; border: none; }
        .Treant .node.collapsed { background-color: #DEF82D; }
        .Treant .node.collapsed .collapse-switch { background: none; }
        .green{ background-color: green}
        .gray{ background-color: lightgray}
        .yellow{background-color: yellow}
        .hr-line {
            border: 0;
            border-top: 1px solid #ccc; /* 或者你喜欢的颜色 */
            margin: 20px 0; /* 调整上下间距 */
        }
    </style>
</head>
<body style="margin: 20px">
<div>
    保戶關係查詢
</div>
<hr class="hr-line">
<div style="background-color: lightgray;height: 50px; display: flex; align-items: center;border: 2px solid black;">
    <label style="margin-left: 10px">保戶編號</label><input style="margin-left: 10px" type="text" id="code" /> <button class="button" style="margin-left: 10px;background-color: dodgerblue" onclick="search()">查詢</button>
</div>
<div style="margin: 10px">
    <label>關係圖</label>
</div>
<div class="chart" id="collapsable-example"></div>

</body>
</html>
<script>
    function parseToChartConfig(data){
        const rootCode = data.code;
        function buildTree(nodes) {
            if (nodes.length === 0) return null;
            const root = {
                text: {
                    name: {
                        val:nodes[0].code,
                        href: `javascript:searchCode('${nodes[0].code}')`
                    },
                    title: nodes[0].name,
                },
                HTMLclass: nodes[0].introducer_code === rootCode ? 'green':'gray',
                children: []
            };
            const queue = [root];
            let i = 1;

            while (i < nodes.length) {
                const node = queue.shift();
                if (i < nodes.length) {
                    const leftChild = {
                        text: {
                            name: {
                                val:nodes[i].code,
                                href: `javascript:searchCode('${nodes[i].code}')`
                            },
                            title: nodes[i].name
                        },
                        HTMLclass: nodes[i].introducer_code === rootCode ? 'green':'gray',
                        children: []
                    };
                    node.children.push(leftChild);
                    queue.push(leftChild);
                    i++;
                }
                if (i < nodes.length) {
                    const rightChild = {
                        text: {
                            name: {
                                val: nodes[i].code,
                                href: `javascript:searchCode('${nodes[i].code}')`
                            },
                            title: nodes[i].name
                        },
                        HTMLclass: nodes[i].introducer_code === rootCode ? 'green':'gray',
                        children: []
                    };
                    node.children.push(rightChild);
                    queue.push(rightChild);
                    i++;
                }
            }

            return root;
        }
        const l = buildTree(data.l);
        const r = buildTree(data.r);
        let chartConfig = {
            chart: {
                container: "#collapsable-example",
                onAfterClickCollapseSwitch: function (node){
                    console.log(134)
                }
            },
            nodeStructure: {
                text: {
                    name: data.code,
                    title: data.name,
                    desc: {
                        val: '上一階',
                        href:`javascript:searchTop('${data.code}');`
                    }
                },
                children: [],
                HTMLclass:'yellow',
            }
        };
        if (l) {
            chartConfig.nodeStructure.children.push(l)
        }
        if (r) {
            chartConfig.nodeStructure.children.push(r)
        }
        return chartConfig;
    }
    function searchCode (code) {
        $.ajax({
            url: '/policyholders/' + code,
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                const chartConfig = parseToChartConfig(data)
                new Treant(chartConfig)
            },
            error: function (xhr, status, error) {

            }
        })
    }
    const search = function () {
        const code = $("#code").val();
        searchCode(code)
    }

    const searchTop = function (code) {
        $.ajax({
            url: `/policyholders/${code}/top`,
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                if (!data) {
                    alert('查無上一階')
                    return;
                }
                const chartConfig = parseToChartConfig(data)
                new Treant(chartConfig)
            },
            error: function (xhr, status, error) {
            }
        })
    }
</script>
